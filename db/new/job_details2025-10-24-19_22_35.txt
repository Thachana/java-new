
Initializing the backend...

Initializing provider plugins...
- Finding hashicorp/aws versions matching "~> 5.0"...
- Finding latest version of hashicorp/null...
- Installing hashicorp/aws v5.100.0...
- Installed hashicorp/aws v5.100.0 (signed by HashiCorp)
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

Success! The configuration is valid.


Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # null_resource.stop_aurora_cluster_action will be created
  + resource "null_resource" "stop_aurora_cluster_action" {
      + id       = (known after apply)
      + triggers = {
          + "aws_region" = "ap-southeast-1"
          + "cluster_id" = "prod-test"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cluster_stop_confirmation = "STOP COMMAND INITIATED. Cluster: prod-test, Region: ap-southeast-1. Check logs for final DB state."
null_resource.stop_aurora_cluster_action: Creating...
null_resource.stop_aurora_cluster_action: Provisioning with 'local-exec'...
null_resource.stop_aurora_cluster_action (local-exec): Executing: ["/bin/bash" "-c" "# Set -e ensures the script stops immediately if the AWS CLI command fails\nset -e\n      \nCLUSTER_ID=\"prod-test\"\nREGION=\"ap-southeast-1\"\n      \n# Function to get current cluster status\nget_status() {\n  aws rds describe-db-clusters \\\n    --db-cluster-identifier \"$CLUSTER_ID\" \\\n    --region \"$REGION\" \\\n    --query 'DBClusters[0].Status' \\\n    --output text 2>/dev/null\n}\n      \necho \"--- Starting Stop Cluster Automation for $CLUSTER_ID ---\"\n      \nCURRENT_STATUS=$(get_status)\necho \"Initial Status: $CURRENT_STATUS\"\n      \n# --- CONDITIONAL LOGIC ---\n      \n# 1. Check if the cluster is already stopped or stopping (Exit Success)\nif [ \"$CURRENT_STATUS\" = \"stopped\" ] || [ \"$CURRENT_STATUS\" = \"stopping\" ]; then\n  echo \"✅ Cluster is already in state: '$CURRENT_STATUS'. Action Complete.\"\n  echo \"RESULT_STATUS: ALREADY_STOPPED\" > stop_result.txt\n  exit 0\nfi\n      \n# 2. Issue the stop command if the cluster is 'available' (Execute Stop)\nif [ \"$CURRENT_STATUS\" = \"available\" ]; then\n  echo \"Attempting to stop cluster...\"\n  aws rds stop-db-cluster \\\n    --db-cluster-identifier \"$CLUSTER_ID\" \\\n    --region \"$REGION\"\n        \n  echo \"✅ Stop command successfully issued. Cluster status is now changing to 'stopping'.\"\n  echo \"RESULT_STATUS: STOP_INITIATED\" > stop_result.txt\n  exit 0\nfi\n      \n# 3. Handle un-stoppable states (Exit Failure)\necho \"❌ ERROR: Cluster $CLUSTER_ID is in unhandled state: $CURRENT_STATUS. Stop command not issued.\"\necho \"RESULT_STATUS: FAILURE_UNHANDLED_STATE\" > stop_result.txt\nexit 1\n"]
null_resource.stop_aurora_cluster_action (local-exec): --- Starting Stop Cluster Automation for prod-test ---
null_resource.stop_aurora_cluster_action (local-exec): Initial Status: stopped
null_resource.stop_aurora_cluster_action (local-exec): ✅ Cluster is already in state: 'stopped'. Action Complete.
null_resource.stop_aurora_cluster_action: Provisioning with 'local-exec'...
null_resource.stop_aurora_cluster_action (local-exec): Executing: ["/bin/sh" "-c" "echo 'STATUS_CONFIRMED'"]
null_resource.stop_aurora_cluster_action (local-exec): STATUS_CONFIRMED
null_resource.stop_aurora_cluster_action: Creation complete after 1s [id=790475511228254592]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

cluster_stop_confirmation = "STOP COMMAND INITIATED. Cluster: prod-test, Region: ap-southeast-1. Check logs for final DB state."

{
  "version": 4,
  "terraform_version": "1.4.7",
  "serial": 1,
  "lineage": "8b9c15df-c3a5-5f0b-ae56-1b22e96fc63e",
  "outputs": {
    "cluster_stop_confirmation": {
      "value": "STOP COMMAND INITIATED. Cluster: prod-test, Region: ap-southeast-1. Check logs for final DB state.",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "stop_aurora_cluster_action",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "790475511228254592",
            "triggers": {
              "aws_region": "ap-southeast-1",
              "cluster_id": "prod-test"
            }
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
